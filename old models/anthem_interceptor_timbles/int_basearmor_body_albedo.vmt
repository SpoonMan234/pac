"VertexlitGeneric"
{
	"$basetexture" "models/timbleweebs/anthem_interceptor_timbles/torso_diffuse"
	"$bumpmap" "models/timbleweebs/anthem_interceptor_timbles/torso_normal"

	"$phongexponenttexture" "models/timbleweebs/anthem_interceptor_timbles/torso_exponent"

	"$color2"	"[0.75 0.8 0.8]"
	"$blendTintByBaseAlpha"	"1"

	"$phong" "1"
	"$phongboost"	"59.9934895"

	"$phongfresnelranges"	"[0.05 0.115 0.945]"

	"$envmap" "env_cubemap"
	"$normalmapalphaenvmapmask"		"1"
	"$envmapfresnel"	"1"

	"$envmaptint"		"[.2 .2 .2]"
	
	
	"$emissiveblendenabled" 	    "1"					// Enable EmissiveBlend. Like $selfillum 1	
    "$emissiveblendstrength" 		"1"				// how strong the entire glow effect is.
    "$emissiveblendtexture" 		"models/timbleweebs/anthem_interceptor_timbles/null"	// This is the glowing texture's mask, like $selfillummask.  SHOULD BE VTF i8 FORMAT, NOT DXT5!!!
    "$emissiveblendbasetexture" 	"models/timbleweebs/anthem_interceptor_timbles/helmet_emissive"	// this is the glowing texture.vtf
    "$emissiveblendflowtexture" 	"models/timbleweebs/anthem_interceptor_timbles/null"	 		// EmmisiveBlend can "flow" or move. But ours is static, so a white texture is used.
    "$emissiveblendtint" 			" [9 1 1] "		// RGB glow intensity. Leave at 1 1 1. This can be used to change how strong each color should glow. So instead of using a darker red color, you may use
	
	
	"$rimlight"               "1"
	"$rimlightexponent"       "10"
	"$rimlightboost"          "3"
}

//	Material using pseudo pbr method 34.2 (Metalness)
//	Engine branch: Garrys Mod
//	Hierarchy: Stack 1/5
//	This vmt affects: Non-metals